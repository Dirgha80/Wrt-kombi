#=====================================================================================
# https://github.com/ophub/amlogic-s9xxx-openwrt
# Description:   Build OpenWrt with Image Builder
# Instructions:  https://openwrt.org/docs/guide-user/additional-software/imagebuilder
# Download from: https://downloads.openwrt.org/releases
#                https://downloads.immortalwrt.org/releases
#=====================================================================================

name: Build OpenWrt with ImageBuilder7u
on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      releases_branch:
        description: "Select the releases branch"
        required: false
        default: "openwrt:24.10.0-rc2"
        type: choice
        options:
          - immortalwrt:23.05.4
          - openwrt:23.05.5
          - openwrt:24.10.0-rc2
      target:
        description: "Select device target:"
        required: true
        default: "all"
        type: choice
        options:
          - all
          - Raspberry Pi 3B
          - Raspberry Pi 4B
          - NanoPi R2C
          - NanoPi R2S
          - NanoPi R4S
          - Orange Pi R1 Plus
          - Orange Pi R1 Plus LTS
          - x86-64
          - Amlogic HG680P
          - Amlogic B860H-V5
          - Amlogic B860H-V1-V2
      rootfs_size:
         description: "ROOTFS SIZE 512 640 768 1024"
         required: true
         default: '1024'
         type: string  
      upload-prerelease:
        description: "Upload as pre-release"
        required: false
        default: "false"
        type: boolean     
      kernel:
        description: 'Kernel Version (ex. 6.6.6, 6.1.31-localversion)'
        required: true
        default: '6.1.66-DBAI'
        type: string
      devices:
        description: "Devices"
        required: true
        default: "s905x4"
        type: choice
        options:
          - s905x
          - s905x2
          - s905x3
          - s905x4
          - h5-orangepi-zeroplus2
          - h5-orangepi-zeroplus
          - h5-orangepi-prime
          - h5-orangepi-pc2
          - h6-orangepi-lite2
          - h6-orangepi-1plus
          - h6-orangepi-3
          - h6-orangepi-3lts
          - h616-orangepi-zero2
          - h618-orangepi-zero2w
          - h618-orangepi-zero3
          - rk3566-orangepi-3b
          - rk3588-orangepi-5plus
          - rk3588s-orangepi-5
      versi:
        description: "Pilih ULO / ULO2"
        required: true
        default: "ulo2"     
        type: choice
        options:
          - ulo
          - ulo2
      fwinfo:
        description: 'Firmware Information'
        required: true
        default: '-'
        type: string
      type_file:
        description: "Select type file"
        required: false
        default: "img.gz"
        type: choice
        options:
          - img.xz
          - img.gz
      rename_rootfs:
        description: "ganti nama rootfs"
        required: false
        default: ""     
        type: string     


env:
  TZ: Asia/Jakarta
  IMAGEBUILDER_SH: imagebuilder.sh
jobs:
  prebuild:
    runs-on: ubuntu-latest
    name: ${{ inputs.releases_branch }}
    outputs:
      target: ${{ steps.set-matrix.outputs.target }}
    steps:
      - name: Set Matrix Run
        id: set-matrix
        run: |
          if [ "${{ inputs.target }}" == "all" ]; then
            echo "target=['Raspberry Pi 3B','Raspberry Pi 4B','NanoPi R2C','NanoPi R2S','NanoPi R4S','Orange Pi R1 Plus','Orange Pi R1 Plus LTS','x86-64','Amlogic HG680P','Amlogic B860H-V5','Amlogic B860H-V1-V2']" >> $GITHUB_OUTPUT
          else
            echo "target=['${{ inputs.target }}']" >> $GITHUB_OUTPUT
          fi
  build:
    needs: prebuild
    runs-on: ubuntu-24.04
    if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}
    name: "${{ matrix.target }}"
    strategy:
      fail-fast: false
      matrix:
        target: ${{fromJSON(needs.prebuild.outputs.target)}}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Initialization environment (normal)
        # if: github.event.inputs.target != 'all' && !cancelled()
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get -qq update
          sudo apt-get -qq install build-essential libncurses5-dev libncursesw5-dev zlib1g-dev gawk git gettext libssl-dev xsltproc rsync wget unzip tar gzip qemu-utils mkisofs
          sudo apt-get -qq install jq python3 python3-pip
          pip install telethon
          pip install colorama
          sudo timedatectl set-timezone "$TZ"
          echo "TARGET=${{ matrix.target }}" >> $GITHUB_ENV
          echo -e "[\033[94m INFO \033[0m] TARGET: ${{ matrix.target }}"
          echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Setup Environment Variables
        id: init
        run: |
          if [ "$TARGET" == "Raspberry Pi 3B" ]; then
            echo "TARGET_NAME=rpi-3" >> $GITHUB_ENV
            echo "TAG_NAME=openwrt_rpi-3" >> $GITHUB_ENV
          elif [ "$TARGET" == "Raspberry Pi 4B" ]; then
            echo "TARGET_NAME=rpi-4" >> $GITHUB_ENV
            echo "TAG_NAME=openwrt_rpi-4" >> $GITHUB_ENV
          elif [ "$TARGET" == "NanoPi R2C" ]; then
            echo "TARGET_NAME=friendlyarm_nanopi-r2c" >> $GITHUB_ENV
            echo "TAG_NAME=openwrt_friendlyarm_nanopi-r2c" >> $GITHUB_ENV
          elif [ "$TARGET" == "NanoPi R2S" ]; then
            echo "TARGET_NAME=friendlyarm_nanopi-r2s" >> $GITHUB_ENV
            echo "TAG_NAME=openwrt_friendlyarm_nanopi-r2s" >> $GITHUB_ENV
          elif [ "$TARGET" == "NanoPi R4S" ]; then
            echo "TARGET_NAME=friendlyarm_nanopi-r4s" >> $GITHUB_ENV
            echo "TAG_NAME=openwrt_friendlyarm_nanopi-r4s" >> $GITHUB_ENV
          elif [ "$TARGET" == "Orange Pi R1 Plus" ]; then
            echo "TARGET_NAME=xunlong_orangepi-r1-plus" >> $GITHUB_ENV
            echo "TAG_NAME=openwrt_xunlong_orangepi-r1-plus" >> $GITHUB_ENV
          elif [ "$TARGET" == "Orange Pi R1 Plus LTS" ]; then
            echo "TARGET_NAME=xunlong_orangepi-r1-plus-lts" >> $GITHUB_ENV
            echo "TAG_NAME=openwrt_xunlong_xunlong_orangepi-r1-plus-lts" >> $GITHUB_ENV
          elif [ "$TARGET" == "x86-64" ]; then
            echo "TARGET_NAME=generic" >> $GITHUB_ENV
            echo "TAG_NAME=openwrt_generic" >> $GITHUB_ENV
          elif [ "$TARGET" == "Amlogic HG680P" ]; then
            echo "TARGET_NAME=amlogic" >> $GITHUB_ENV
            echo "openwrt_board=s905x" >> $GITHUB_ENV
            echo "TAG_NAME=openwrt_amlogic_s905x" >> $GITHUB_ENV
          elif [ "$TARGET" == "Amlogic B860H-V5" ]; then
            echo "TARGET_NAME=amlogic" >> $GITHUB_ENV
            echo "openwrt_board=s905x-b860h" >> $GITHUB_ENV
            echo "TAG_NAME=openwrt_amlogic_s905x-b860h" >> $GITHUB_ENV
          elif [ "$TARGET" == "Amlogic B860H-V1-V2" ]; then
            echo "TARGET_NAME=amlogic" >> $GITHUB_ENV
            echo "openwrt_board=s905x2" >> $GITHUB_ENV
            echo "TAG_NAME=openwrt_amlogic_s905x2" >> $GITHUB_ENV
          fi
          echo "status=success" >> ${GITHUB_OUTPUT}
          echo -e "[\033[92m SUCCESS \033[0m] Status: Success"


      - name: Build Rootfs [ ${{ inputs.releases_branch }} ]
        id: imagebuilder
        if: ${{ steps.init.outputs.status }} == 'success' && !cancelled()
        run: |
          echo -e "[\033[95m STEPS \033[0m] Building Firmware And Rootfs"
          TARGET_NAME="${{ env.TARGET_NAME }}"
          RELEASES_BRANCH="${{ inputs.releases_branch }}"${RELEASES_BRANCH%:*}
          chmod +x ${IMAGEBUILDER_SH}
          bash ${IMAGEBUILDER_SH} ${RELEASES_BRANCH} "${{ env.TARGET_NAME }}"
          echo "RELEASES_TAG=${RELEASES_BRANCH/:/_}" >> ${GITHUB_ENV}
          echo "status=success" >> ${GITHUB_OUTPUT}
          echo -e "[\033[92m SUCCESS \033[0m] Status: Success"
  
      - name: Clear server space
        if: ${{ steps.imagebuilder.outputs.status }} == 'success' && !cancelled()
        run: |
          cd imagebuilder
          rm -rf $(ls . | grep -v "^bin$" | xargs) 2>/dev/null
          df -hT ${PWD}

      - name: Prepare file First
        run: |
          cd imagebuilder
          echo -e "[\033[95m STEPS \033[0m] Prepare File.."
          mkdir -p compiled_images_${{ env.TAG_NAME }}
          if [[ "${{ env.TARGET_NAME }}" != "amlogic" ]]; then
            for file in bin/targets/*/*/*.img.gz; do mv "$file" compiled_images_${{ env.TAG_NAME }}; done
          else
            for file in bin/targets/*/*/*rootfs.tar.gz; do mv "$file" compiled_images_${{ env.TAG_NAME }}; done
          fi
          echo -e "INFO files list: \n$(ls -l compiled_images_${{ env.TAG_NAME }} 2>/dev/null)"

      - name: Packaging OpenWrt For Amlogic
        run: |
          cd imagebuilder
          if [[ "${{ env.TARGET_NAME }}" == "amlogic" ]]; then
            echo -e "[\033[95m STEPS \033[0m] Cloning Ophub Repacking Amlogic"
            git clone --depth 1 https://github.com/ophub/amlogic-s9xxx-openwrt.git ophub_builder
            mkdir -p ophub_builder/openwrt-armvirt
            cp -f compiled_images_${{ env.TAG_NAME }}/*rootfs.tar.gz ophub_builder/openwrt-armvirt/
            cd ophub_builder
            sudo ./remake -b ${{ env.openwrt_board }} -k 6.6.y -s ${{ inputs.rootfs_size }}
            for file in openwrt/out/*.img.gz; do cp -f "$file" ../compiled_images_${{ env.TAG_NAME }}; done
            # for file in openwrt/out/*.img.gz; do cp -f "$file" home/runner/work/Wrt-kombi/Wrt-kombi/build/${{ inputs.rename_rootfs }}.img.gz; done
          fi

      - name: Prepare Before Uploads
        id: prepare2
        run: |
          cd imagebuilder
          echo -e "[\033[95m STEPS \033[0m] Replace Name"
          search_replace_patterns=(
              "bcm27xx-bcm2710-rpi-3|Raspberry-Pi-3_ext4-sysupgrade"
              "bcm27xx-bcm2711-rpi-4|Raspberry-Pi-4_ext4-sysupgrade"
              "rockchip-armv8-friendlyarm_nanopi-r2c|NanoPi_R2C_ext4-sysupgrade"
              "rockchip-armv8-friendlyarm_nanopi-r2s|NanoPi_R2S_ext4-sysupgrade"
              "rockchip-armv8-friendlyarm_nanopi-r4s|NanoPi_R4S_ext4-sysupgrade"
              "rockchip-armv8-xunlong_orangepi-r1-plus|Orange-Pi-R1_ext4-sysupgrade"
              "rockchip-armv8-xunlong_orangepi-r1-plus-lts|Orange-Pi-R1-Plus-LTS_ext4-sysupgrade"
              "x86-64-generic-ext4-combined-efi|x86-64-Generic_ext4-combined-efi"
              "x86-64-generic-ext4-combined|x86-64-Generic_ext4-combined"
              "x86-64-generic-squashfs-combined-efi|x86-64-Generic_squashfs-combined-efi"
              "x86-64-generic-squashfs-combined|x86-64-Generic_squashfs-combined"
              "_amlogic_s905x_|Amlogic_HG680P"
              "_amlogic_s905x-b860h_|Amlogic_B860HV1-V2"
              "_amlogic_s905x2_|Amlogic_B860HV5"
          )
          for pattern in "${search_replace_patterns[@]}"; do
              search="${pattern%%|*}"
              replace="${pattern##*|}"

              for file in compiled_images_${{ env.TAG_NAME }}/*${search}*.img.gz; do
                  if [[ -f "$file" ]]; then
                      if [[ "${{ env.TARGET_NAME }}" == "amlogic" ]]; then
                        kernel=$(echo "$file" | grep -oP 'k[0-9.]+')
                        new_name="RTA-WRT_${{ env.RELEASES_TAG }}_${replace}_${kernel}.img.gz"
                      else
                        new_name="RTA-WRT_${{ env.RELEASES_TAG }}_${replace}.img.gz"
                      fi
                      echo -e "[\033[94m INFO \033[0m] Renaming: $file -> $new_name"
                      mv "$file" "compiled_images_${{ env.TAG_NAME }}/$new_name"
                  fi
              done
          done
          echo "status=success" >> ${GITHUB_OUTPUT}
          echo -e "[\033[92m SUCCESS \033[0m] Status: Success"
          echo -e "INFO files list: \n$(ls -l compiled_images_${{ env.TAG_NAME }} 2>/dev/null)"

      - name: Extract firmware
        id: extract
        run: |  
             cd imagebuilder/compiled_images_${{ env.TAG_NAME }}
             sudo mkdir -p boot rootfs img
             if [ ${{ github.event.inputs.type_file }} = "img.gz" ]; then
             sudo gunzip *.img.gz
             else
             sudo unxz *.img.xz
             fi
             los=$(sudo losetup -fP --show *.img)
             sudo mount ${los}p2 rootfs
             (cd rootfs && sudo tar cfz /home/runner/work/Wrt-kombi/Wrt-kombi/rootfs/${{ inputs.rename_rootfs }}.tar.gz *)
  build_ipk:
    needs: build
    permissions:
      contents: write
    name: ULO online
    runs-on: ubuntu-20.04
    steps:         
      - name: Cleanup and Installing Prerequisites
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get update
          sudo -E apt-get -y install lolcat build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses-dev libssl-dev python3-distutils rsync unzip zlib1g-dev file wget
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo -E apt-get -y install wget python3
          sudo pip3 install gdown
          sudo timedatectl set-timezone "$TZ"
          sudo pip3 install git+https://github.com/Juvenal-Yescas/mediafire-dl
          wget https://mega.nz/linux/repo/xUbuntu_20.04/amd64/megacmd-xUbuntu_20.04_amd64.deb && sudo apt install "$PWD/megacmd-xUbuntu_20.04_amd64.deb"
                    
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref_name }}

      - name: Mengatur tanggal
        id: date
        run: echo "date=$(date +'%d-%m-%y %H:%M:%S')" >> $GITHUB_OUTPUT
   
      - name: Building OpenWrt
        run: |
          sudo chmod +x ulo2
          sudo chmod +x ulo
          sudo ./${{ inputs.versi }} -m ${{ inputs.devices }} -k ${{ inputs.kernel }} -s ${{ inputs.rootfs_size }}
          
      - name: Creating Package Artifact
        run: |
          mkdir -p ./artifact
          cp -rf ./out/${{ inputs.devices }}/* ./artifact/
          cp -rf ./rootfs/*.tar.gz ./artifact/
          
      - name: Delivering Package
        uses: actions/upload-artifact@v3
        with:
          name: openwrt_package
          path: ./artifact/*

      - name: Upload release asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./artifact/*
          tag: ${{ inputs.devices }}
          file_glob: true
          overwrite: true
          body: |
            ##  OpenWRT Release for ${{ inputs.devices }} devices
            ULO-Builder Release from Github Workflow
            ### OpenWrt Image Information
            - Firmware Details : 
              - Tanggal Build: ${{ steps.date.outputs.date }}
              - Devices type : ${{ inputs.devices }}
              - Kernel version : ${{ inputs.kernel }}
              - ROOTFS File : ${{ inputs.rename_rootfs }}
              - ROOTFS Size : ${{ inputs.rootfs_size }}
            - Firmware Information : 
              - ${{ inputs.fwinfo }}
