#!/bin/sh

# ENV
exec > /root/houjie-wrt.log 2>&1

msg() {
    local DATE=$(date '+%d %B %Y %T')
    echo "[ INFO FIRST SETUP ] $1"
    logger -p "notice" "[ INFO FIRST SETUP ] $1"
}

# Fungsi setup wireless 2.4 GHz dan 5 GHz
setup_wireless() {
    msg "STEP: Configuring wireless networks..."

    # Cek file konfigurasi wireless, kalau belum ada jalankan wifi detect
    if [ ! -f /etc/config/wireless ]; then
        msg "WARNING: Wireless config not found, running wifi detect..."
        wifi detect > /etc/config/wireless
        if [ $? -ne 0 ]; then
            msg "ERROR: Failed to detect wireless devices"
            return 1
        fi
    fi

    # Backup konfigurasi lama
    cp /etc/config/wireless /etc/config/wireless.bak 2>/dev/null

    # Setup radio0 (2.4 GHz)
    if uci get wireless.radio0.disabled >/dev/null 2>&1; then
        uci set wireless.radio0.disabled='0'
        uci set wireless.radio0.channel='1'
        uci set wireless.radio0.band='2g'
        uci set wireless.radio0.htmode='HT20'

        uci set wireless.@wifi-iface[0].device='radio0'
        uci set wireless.@wifi-iface[0].mode='ap'
        uci set wireless.@wifi-iface[0].ssid='Houjie-2G'
        uci set wireless.@wifi-iface[0].encryption='psk2'
        uci set wireless.@wifi-iface[0].key='sijitekowolu'
        uci set wireless.@wifi-iface[0].disabled='0'
    fi

    # Setup radio1 (5 GHz)
    if uci get wireless.radio1.disabled >/dev/null 2>&1; then
        uci set wireless.radio1.disabled='0'
        uci set wireless.radio1.channel='149'
        uci set wireless.radio1.band='5g'
        uci set wireless.radio1.htmode='VHT80'

        # Tambah iface radio1 jika belum ada
        if ! uci show wireless | grep -q '@wifi-iface.*device=radio1'; then
            uci add wireless wifi-iface
            uci set wireless.@wifi-iface[-1].device='radio1'
            uci set wireless.@wifi-iface[-1].mode='ap'
            uci set wireless.@wifi-iface[-1].ssid='Houjie-5G'
            uci set wireless.@wifi-iface[-1].encryption='psk2'
            uci set wireless.@wifi-iface[-1].key='sijitekowolu'
            uci set wireless.@wifi-iface[-1].disabled='0'
        fi
    fi

    # Commit dan reload wireless
    uci commit wireless
    wifi reload

    msg "Wireless configuration applied."
}

# dont remove!
msg "Installed Time: $(date '+%A, %d %B %Y %T')"
msg "###############################################"
msg "Processor: $(ubus call system board | grep '\"system\"' | sed 's/ \+/ /g' | awk -F'\"' '{print $4}')"
msg "Device Model: $(ubus call system board | grep '\"model\"' | sed 's/ \+/ /g' | awk -F'\"' '{print $4}')"
msg "Device Board: $(ubus call system board | grep '\"board_name\"' | sed 's/ \+/ /g' | awk -F'\"' '{print $4}')"
sed -i -E "s|icons/port_%s.png|icons/port_%s.gif|g" /www/luci-static/resources/view/status/include/29_ports.js

if grep -q "ImmortalWrt" /etc/openwrt_release; then
  sed -i -E "s/(DISTRIB_DESCRIPTION='ImmortalWrt [0-9]+\.[0-9]+\.[0-9]+).*/\1'/" /etc/openwrt_release
  sed -i -E "s/(PRETTY_NAME=\"ImmortalWrt [0-9]+\.[0-9]+\.[0-9]+).*/\1\"/" /usr/lib/os-release
  sed -i -E "s|services/ttyd|system/ttyd|g" /usr/share/ucode/luci/template/themes/material/header.ut
  msg "Branch version: $(grep 'DISTRIB_DESCRIPTION=' /etc/openwrt_release | awk -F\"'\" '{print $2}')"

elif grep -q "OpenWrt" /etc/openwrt_release; then
  sed -i -E "s/(DISTRIB_DESCRIPTION='OpenWrt [0-9]+\.[0-9]+\.[0-9]+).*/\1'/" /etc/openwrt_release
  sed -i -E "s/(DISTRIB_DESCRIPTION='OpenWrt [0-9]+\.[0-9]+\.[0-9]+).*/\1'/" /usr/lib/os-release
  sed -i -E "s/(PRETTY_NAME=\"OpenWrt [0-9]+\.[0-9]+\.[0-9]+).*/\1\"/" /usr/lib/os-release
  msg "Branch version: $(grep 'DISTRIB_DESCRIPTION=' /etc/openwrt_release | awk -F\"'\" '{print $2}')"
fi

msg "###############################################"

# Set hostname and Timezone to Asia/Jakarta
msg "Setup NTP Server and Time Zone to Asia/Jakarta"
uci set system.@system[0].hostname='houjie-WRT'
uci set system.@system[0].timezone='WIB-7'
uci set system.@system[0].zonename='Asia/Jakarta'
uci -q delete system.ntp.server
uci add_list system.ntp.server="pool.ntp.org"
uci add_list system.ntp.server="id.pool.ntp.org"
uci add_list system.ntp.server="time.google.com"
uci commit system

# configure wan interface
msg "Setup WAN and LAN Interface"
uci set network.lan.ipaddr="192.168.1.1"
uci set network.lan.delegate='0'
uci set network.wan=interface
uci set network.wan.proto='dhcp'
uci set network.wan.device='eth1'
uci set network.modemmanager=interface 
uci set network.modemmanager.proto='modemmanager'
uci set network.modemmanager.device='/sys/devices/platform/scb/fd500000.pcie/pci0000:00/0000:00:00.0/0000:01:00.0/0000:01:00.0/usb2/2-1'
uci set network.modemmanager.apn='internet'
uci set network.modemmanager.auth='none'
uci set network.modemmanager.iptype='ipv4'
uci set network.modemmanager.force_connection='1'
uci set network.tethering=interface
uci set network.tethering.proto='dhcp'
uci set network.tethering.device='usb0'
uci set network.RAKITAN=interface
uci set network.RAKITAN.proto='none'
uci set network.RAKITAN.device='wwan0'
uci -q delete network.wan6
uci commit network
uci set firewall.@zone[1].network='wan modemmanager RAKITAN tethering'
uci commit firewall

# Setup Wireless if available
msg "Setup Wireless if available"
setup_wireless

# Step 1: Configure Password Login OpenWrt
msg "Step 1: Configure Password Login OpenWrt"
(echo "sijitekowolu"; sleep 1; echo "sijitekowolu") | passwd > /dev/null

# Step 2: Remove login password required when accessing terminal
msg "Step 2: Remove login password required when accessing terminal"
uci set ttyd.@ttyd[0].command='/bin/bash --login'
uci commit ttyd

# Step 3: Remove huawei me909s usb-modeswitch
msg "Step 3: Remove huawei me909s usb-modeswitch"
sed -i -e '/12d1:15c1/,+5d' /etc/usb-mode.json

# Step 4: Remove dw5821e usb-modeswitch
msg "Step 4: Remove dw5821e usb-modeswitch"
[ -f /etc/usb-mode.json ] && sed -i -e '/12d1:15c1/,+5d' /etc/usb-mode.json

# Step 6: Adjusting App Category
msg "Step 6: Adjusting App Category"
sed -i -E "s|status|services|g" /usr/lib/lua/luci/controller/base64.lua

# Step 7: Set Theme
msg "Step 7: Set Theme"
uci set luci.main.mediaurlbase='/luci-static/hj' && uci commit

# Step 8: Setup PHP
msg "Step 8: Setup PHP"
msg "system not using php-cgi, patching php config ..."
uci set uhttpd.main.ubus_prefix='/ubus'
uci set uhttpd.main.interpreter='.php=/usr/bin/php-cgi'
uci set uhttpd.main.index_page='cgi-bin/luci'
uci add_list uhttpd.main.index_page='index.html'
uci add_list uhttpd.main.index_page='index.php'
uci commit uhttpd
sed -i -E "s|memory_limit = [0-9]+M|memory_limit = 100M|g" /etc/php.ini
sed -i '$a ; Set the default timezone\ndate.timezone = "Asia/Jakarta"' /etc/php.ini
ln -s /usr/bin/php-cli /usr/bin/php
[ -d /usr/lib/php8 ] && [ ! -d /usr/lib/php ] && ln -sf /usr/lib/php8 /usr/lib/php
msg "patching system with php configuration done ..."
msg "restarting uhttpd ..."
/etc/init.d/uhttpd reload

# Step 9: Setting Tinyfm
msg "Step 9: Setting Tinyfm"
ln -s / /www/tinyfm/rootfs

# Step 10: Change banner
msg "Step 10: Change banner"
rm -rf /etc/profile
rm -rf /etc/profile.d/30-sysinfo.sh
[ -f /etc/profile1 ] && mv /etc/profile1 /etc/profile
mv /etc/profile.d/30-sysinfo1.sh /etc/profile.d/30-sysinfo.sh
chmod +x /etc/profile.d/30-sysinfo.sh

# Step 11: Set all permission files
msg "Step 11: Set all permission files"
check_permission() {
    local DIR=${1:-.}
    find "$DIR" -type f | while read file; do
        if file "$file" | grep -q "executable"; then
            if [ ! -x "$file" ]; then
                msg "File requiring chmod +x: $file"
                chmod +x "$file"
            fi
        fi
    done
}
check_permission "/etc/init.d"
check_permission "/etc/mihomo"
check_permission "/etc/openclash"
check_permission "/lib/netifd"
check_permission "/lib/wifi"
check_permission "/sbin"
check_permission "/usr/bin"
check_permission "/usr/lib/ModemManager/connection.d"

# Step 12: Permissions
msg "Step 12: Permissions"
chmod +x /etc/houjie-wrt
chmod +x /sbin/auto_delete.sh
chmod +x /www/vnstati/vnstati.sh
chmod +x /usr/bin/cpustat
chmod +x /usr/bin/jam.sh

# Step 14: IP info
msg "Step 14: IP info"
rm -rf /www/luci-static/resources/view/status/include/01_ipinfo.js

# Step 15: Set language
msg "Step 15: Set language"
uci set luci.main.lang='en' && uci commit

# Step 16: Rename mihomo to nikki
msg "Step 16: Rename mihomo to nikki"
mv /etc/mihomo /etc/nikki

# Step 17: Add port
msg "Step 17: Add port"
chmod +x /root/addport.sh && /root/addport.sh

# Step 18: sync_time.sh Process
msg "Step 18: sync_time.sh Process"
chmod +x /sbin/sync_time.sh

# Step 19: Check cpustat file
msg "Step 19: Check cpustat file"
file_sumber="/usr/bin/cpustat1"
direktori_tujuan="/usr/bin/"
nama_baru="cpustat"
file_tujuan="$direktori_tujuan$nama_baru"
if [ ! -f "$file_tujuan" ]; then
  mv "$file_sumber" "$file_tujuan"
  msg "File dipindahkan dan diganti nama menjadi: $nama_baru"
  chmod +x "$file_tujuan"
  msg "Perizinan eksekusi diberikan untuk file $nama_baru"
else
  msg "File dengan nama $nama_baru sudah ada, proses dilewati."
fi

# Step 22: Run ocmod
msg "Step 22: Run ocmod"
chmod +x /root/ocmod.sh && /root/ocmod.sh

# Step 22: Run ocmod
msg "Step 23: Run ocmod"
chmod +x /root/temp.sh && /root/temp.sh

# Step 23: Remove temp files
msg "Step 24: Remove temp files"
rm -rf /root/ocmod.sh /root/addport.sh /root/temp.sh

msg "First Setup settings successfully applied..."

# Remove this script after execution
rm -f /etc/uci-defaults/$(basename $0)

exit 0
